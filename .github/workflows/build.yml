name: Update Drivers

on:
  workflow_dispatch:

jobs:

  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            TARGET: windows
            CMD_RESOLVE_DEPS: pip install -r requirements.txt pillow pyinstaller
            CMD_BUILD: |
              pyinstaller -F -i trainmacro.icns --add-binary "./drivers/win32/chromedriver.exe;./drivers" -n "Train Macro" trainmacro.py
            OUT_FILE_NAME: trainmacro-win.zip
            ASSET_MIME: application/zip
            CMD_POST_BUILD: |
              cd dist && powershell Compress-Archive *.exe trainmacro-win.zip
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Load drivers
      uses: actions/download-artifact@v3
      with:
        name: latest_drivers
        path: drivers

    - name: Resolve dependencies for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_RESOLVE_DEPS }}

    - name: Build for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_BUILD }}

    - name: Post build for ${{ matrix.TARGET }}
      run: ${{ matrix.CMD_POST_BUILD }}

    - name: Get latest release
      id: last_release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: kmnhan/train-macro
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        tag: ${{ steps.last_release.outputs.release }}
        file: ./dist/${{ matrix.OUT_FILE_NAME }}
        overwrite: true
